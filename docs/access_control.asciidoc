[[access_control]]

== Authentication and access control [Enterprise Edition only]

ifeval::["{enterprise_enabled}" == "false"]
  NOTE: Documentation for Authentication and access control is available only in Kibi Enterprise Edition.
endif::[]

ifeval::["{enterprise_enabled}" == "true"]

Kibi EE can be integrated with Elasticsearch clusters protected by either
Search Guard or Elastic Shield, providing configurable handling of
authorization errors with specific extensions for the SIREn Join plugin.

=== Configuring Kibi to serve requests over SSL

Before enabling access control, make sure to configure Kibi to serve requests
over SSL, otherwise credentials will be transmitted in clear over the network.

The Kibi EE demo distribution includes the following sample certificates in
the `kibi/pki` directory for evaluation purposes:

- **cacert.pem**: a certification authority bundle in PEM format.
- **gremlin.jks**: a certificate bundle for the Gremlin API interface in
  Java Keystore format; the password of the keystore is _password_.
- **server.crt**: a sample certificate for the Kibi HTTP interface in PEM format.
- **server.key**: the key for the **server.crt** sample certificate in PEM format.

==== Serving Kibi over HTTPS

HTTPS support can be enabled by copying the certificate and key files to a
location readable by the Kibi process and modifying the following settings
in `config/kibi.yml`:

[source,yaml]
----
server.ssl.key: "pki/server.key"
server.ssl.cert: "pki/server.crt"
----

On Windows systems, make sure to use \ (backslash) as the path separator.

==== Gremlin server

To enable SSL support on the Gremlin API interface (used by the
<<graph_browser,graph browser>>), set the following parameters in the
`kibi_core.gremlin_server` section of the `config/kibi.yml` file:

- **url**: replace `http` with `https`.
- **ssl.key_store**: set to the path to the Gremlin API interface keystore.
- **ssl.key_store_password**: set to the password of the Gremlin API interface
  keystore.
- **ssl.ca**: set to the path of the certification authority chain bundle that
  can be used to validate requests from Kibi to the Gremlin API; you can omit
  this parameter if the certificates for the Kibi HTTPS interface have been
  issue and signed by a public authority.

E.g.:

[source,yaml]
----
kibi_core:
  gremlin_server:
    url: https://127.0.0.1:8061
    ssl:
      key_store: "pki/gremlin.jks"
      key_store_password: "password"
      ca: "pki/cacert.pem"
----

On Windows systems, make sure to use \ (backslash) as the path separator.

After restarting Kibi, click on **Settings**, then click on **Datasources**,
and update the URL of the Kibi Gremlin Server datasource to start with _https_
instead of _http_.

=== Handling of authorization errors

Kibi EE parses generic authorization errors from Elasticsearch to report them
in a more understandable way.

While using Kibi EE on a secured cluster, you might see the following errors:

* _"Kibi Relational Filter: Could not load filter Relational visualization: one
or more join relations refers to unauthorized data"_: displayed when a search
query contains relations between unauthorized indices.
* _"One or more visualizations Refers to unauthorized data"_: displayed when a
dashboard contains one or more visualizations loading data from unauthorized
indices.
* _"Enhanced search results: Refers to unauthorized data"_: displayed
when an "Enhanced search results" visualization tries to load data from
unauthorized indices.
* _"Kibi Relational Filter: there are relations with unauthorized data"_:
displayed when there are relationships between unauthorized indices.
* _"One or more saved search refers to unauthorized data"_: displayed when a
saved search is executed on an unauthorized index.

These errors appear for five seconds as a yellow toaster at the top of the
screen.

Authorization errors can be hidden by changing the value of the
*kibi:shieldAuthorizationWarning* setting: click on the _Settings_ tab, then on
_Advanced_ tab, and uncheck the setting to hide authorization errors messages.
Regardless of this setting, all authorization errors will still be reported as
warnings in the logs.

._Two warning messages example_
image::images/authorization-warning-messages.png["Two warning messages example",align="center"]

If a dashboard is configured on an index on which you have no permission, all
the visualizations loading data from the index will be empty and the custom
warning message will be displayed at the top of the screen; in addition, the
document count for the dashboard will display the message *Unauthorized*.

If a dashboard is configured on an index on which you have permission to see only
a subset of documents or fields, the visualizations will only process and display
the data you're authorized to view.

._A visualizations that loads unauthorized data._
image::images/authorization-visualization-error.png["A visualization that loads unauthorized data.",align="left"]

._A visualizations that refers to an unauthorized index._
image::images/authorization-visualization-empty.png["A visualization that refers to an unauthorized index.",align="left"]

endif::[]
