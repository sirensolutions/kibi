[[kibi-plugins]]
== Kibi Plugins added

Add-on functionality for Kibi is implemented with plug-in modules. You can use the `bin/kibi plugin`
command to manage these modules. You can also install a plugin manually by moving the plugin file to the
`installedPlugins` directory and unpacking the plugin files into a new directory.

A list of existing Kibana plugins is available on https://github.com/elastic/kibana/wiki/Known-Plugins[GitHub].

[float]
=== Installing Plugins

Use the following command to install a plugin:

[source,shell]
bin/kibi plugin --install <org>/<package>/<version>

[NOTE]
====
Elasticsearch plugins follow the elasticsearch versionning,
e.g. to installing Marvel plugin for this perticular Kibi version which comes by default
with elasticsearch v{elasticsearch-version} use:

`bin/kibi plugin -i elasticsearch/marvel/{elasticsearch-version}`
====

You can also use `-i` instead of `--install`, as in the following example:

[source,shell]
bin/kibi plugin -i elasticsearch/marvel/latest

Because the organization given is `elasticsearch`, the plugin management tool automatically downloads the
plugin from `download.elastic.co`.

[float]
=== Installing Plugins from an Arbitrary URL

You can specify a URL to a plugin with the `-u` or `--url` options after the `-i` or `--install` option, as in the
following example:

[source,shell]
bin/kibi plugin -i sample-plugin -u https://some.sample.url/directory
Installing sample-plugin
Attempting to extract from https://some.sample.url/directory
Downloading <some number> bytes....................
Extraction complete
Optimizing and caching browser bundles...
Plugin installation complete

You can specify URLs that use the HTTP, HTTPS, or `file` protocols.

[float]
=== Installing Plugins to an Arbitrary Directory

Use the `-d` or `--plugin-dir` option to specify a directory for plugins, as in the following example:

[source,shell]
bin/kibi plugin -i elasticsearch/sample-plugin/latest -d <path/to/directory>
Installing sample-plugin
Attempting to extract from https://download.elastic.co/elasticsearch/sample-plugin/sample-plugin-latest.tar.gz
Downloading <some number> bytes....................
Extraction complete
Optimizing and caching browser bundles...
Plugin installation complete

NOTE: This command creates the specified directory if it does not already exist.

[float]
=== Removing Plugins

Use the `--remove` or `-r` option to remove a plugin, including any configuration information, as in the following
example:

[source,shell]
bin/kibi plugin --remove marvel

You can also remove a plugin manually by deleting the plugin's subdirectory under the `installedPlugins` directory.

[float]
=== Listing Installed Plugins

Use `--list` or `-l` option to list the currently installed plugins.

[float]
=== Updating Plugins

To update a plugin, remove the current version and reinstall the plugin.

[float]
=== Configuring the Plugin Manager

By default, the plugin manager provides you with feedback on the status of the activity you've asked the plugin manager
to perform. You can control the level of feedback with the `--quiet` and `--silent` options. Use the `--quiet` option to
suppress all non-error output. Use the `--silent` option to suppress all output.

By default, plugin manager requests do not time out. Use the `--timeout` option, followed by a time, to change this
behavior, as in the following examples:

[source,shell]
.Waits for 30 seconds before failing
bin/kibi plugin --install username/sample-plugin --timeout 30s

[source,shell]
.Waits for 1 minute before failing
bin/kibi plugin --install username/sample-plugin --timeout 1m

[float]
==== Plugins and Custom Kibi Configurations

Use the `-c` or `--config` options to specify the path to the configuration file used to start Kibi. By default, Kibi
uses the configuration file `config/kibi.yml`. When you change your installed plugins, the `bin/kibi plugin` command
restarts the Kibi server. When you are using a customized configuration file, you must specify the
path to that configuration file each time you use the `bin/kibi plugin` command.

[float]
=== Plugin Manager Exit Codes

[horizontal]
0:: Success
64:: Unknown command or incorrect option parameter
74:: I/O error
70:: Other error

[float]
[[plugin-switcher]]
== Switching Plugin Functionality

The Kibi UI serves as a framework that can contain several different plugins. You can switch between these
plugins by clicking the image:images/app-button.png[Plugin Chooser] *Plugin chooser* button to display icons for the
installed plugins:

image::images/app-picker.png[]

Click a plugin's icon to switch to that plugin's functionality.

include::known-plugins.asciidoc[]
